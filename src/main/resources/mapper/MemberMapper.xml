<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.itjunior.mapper.MemberMapper">

    <sql id="memberColumns">
          member_idx
        , userId
        , email
        , password
        , nickname
        , name
        , delete_yn
        , create_time
        , last_login_time
        , role
        , provider
        , providerId
        , uuid
    </sql>

    <insert id="insertOrUpdateMember" parameterType="Member">
        <selectKey keyProperty="member_idx" order="AFTER" resultType="int">
            select LAST_INSERT_ID()
        </selectKey>
        INSERT INTO tbl_member (
            <include refid="memberColumns" />
        ) VALUES (
            #{member_idx}
            , #{userId}
            , #{email}
            , IFNULL(#{password}, password)
            , #{nickname}
            , #{name}
            , #{delete_yn}
            , NOW()
            , NULL
            , #{role}
            , #{provider}
            , #{providerId}
            , #{uuid}
        )
        ON DUPLICATE KEY UPDATE
            password = IFNULL(#{password}, password)
            , name = #{name}
            , nickname = #{nickname}
            , email = #{email}
    </insert>

    <!-- member_idx(PK)로 회원 상세정보 조회-->
    <select id="selectMemberByIdx" resultType="Member" parameterType="int">
        SELECT <include refid="memberColumns" />
        FROM tbl_member
        WHERE member_idx=#{member_idx}
    </select>

    <!-- userId(Unique key)로 회원 상세정보 조회-->
    <select id="selectMemberByUserId" resultType="Member" parameterType="String">
        SELECT <include refid="memberColumns" />
        FROM tbl_member
        WHERE userId=#{userId}
    </select>

    <select id="findNameAndEmail" resultType="String" parameterType="Member">
        SELECT userId
        FROM tbl_member
        WHERE name=#{name} AND email=#{email}
    </select>

    <select id="findUserIdAndName" resultType="int" parameterType="Member">
        SELECT member_idx
        FROM tbl_member
        WHERE userId=#{userId} AND name=#{name}
    </select>

    <update id="changePasswordByIdx" parameterType="Member">
        UPDATE tbl_member
        SET password=#{password}
        WHERE member_idx=#{member_idx}
    </update>

    <delete id="deleteMemberByIdxForOauth" parameterType="int">
        DELETE FROM tbl_member
        WHERE
            member_idx=#{member_idx}
    </delete>
    <delete id="deleteMemberByIdx" parameterType="Member">
        DELETE FROM tbl_member
        WHERE
            member_idx=#{member_idx}
        AND
            password=#{password}
    </delete>
    

    <update id="updateLoginTime" parameterType="Member">
        UPDATE
            tbl_member
        SET
            last_login_time = NOW()
        WHERE
            userId=#{userId}
    </update>

    <select id="idCheck" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM tbl_member
        WHERE userId=#{userId}
    </select>

    <select id="emailCheck" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM tbl_member
        WHERE email=#{email}
    </select>

    <select id="nickNameCheck" parameterType="String" resultType="int">
        SELECT COUNT(*)
        FROM tbl_member
        WHERE nickname=#{nickname}
    </select>
</mapper>
